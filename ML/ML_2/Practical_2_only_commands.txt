import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
----------------------------------------------------------------------------------------
df=pd.read_csv('emails.csv')
df
----------------------------------------------------------------------------------------
df.shape
----------------------------------------------------------------------------------------
df.size
----------------------------------------------------------------------------------------
df.head
----------------------------------------------------------------------------------------
df.tail
----------------------------------------------------------------------------------------
df.describe
----------------------------------------------------------------------------------------
df.dtypes
----------------------------------------------------------------------------------------
df
----------------------------------------------------------------------------------------
X=df.drop(["Email No.", "Prediction"],axis=1)
----------------------------------------------------------------------------------------
X
----------------------------------------------------------------------------------------
Y=df["Prediction"]
----------------------------------------------------------------------------------------
Y
----------------------------------------------------------------------------------------
sns.countplot(x=Y)
----------------------------------------------------------------------------------------
Y.value_counts
----------------------------------------------------------------------------------------
from sklearn.preprocessing import MinMaxScaler
scaler=MinMaxScaler()
X_Scale=scaler.fit_transform(X)
----------------------------------------------------------------------------------------
X_Scale
----------------------------------------------------------------------------------------
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_Test=train_test_split(X_Scale,Y,test_size=0.46,random_state = 46)
X_train.shape
----------------------------------------------------------------------------------------
X_Scale.shape
----------------------------------------------------------------------------------------
X_test.shape
----------------------------------------------------------------------------------------
Y_train.shape
----------------------------------------------------------------------------------------
from sklearn.neighbors import KNeighborsClassifier
knn= KNeighborsClassifier()
knn.fit(X_train,Y_train)
----------------------------------------------------------------------------------------
Y_pred=knn.predict(X_test)
Y_pred
----------------------------------------------------------------------------------------
from sklearn.metrics import accuracy_score,classification_report,ConfusionMatrixDisplay
ConfusionMatrixDisplay.from_predictions(Y_Test,Y_pred)
----------------------------------------------------------------------------------------
accuracy_score(Y_Test,Y_pred)
----------------------------------------------------------------------------------------
print(classification_report(Y_Test,Y_pred))
----------------------------------------------------------------------------------------